name: Release finish
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to finish"
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MERGE_CONFLICTS: true
    steps:
      - run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get -y install git-flow

      - name: Set up Node.js
        uses: actions/setup-node@v1.2.0
        with:
          node-version: "12.x"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@cytiva"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: release/${{ github.event.inputs.version }}
          fetch-depth: 0
          token: ${{ secrets.SUPER_AUTH_TOKEN }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "Release manager"
          git config user.email noreply@github.com

      - name: Init git flow
        run: |
          git checkout master
          git checkout develop
          git checkout release/${{ github.event.inputs.version }}
          git flow init -d

      - name: Bump package.json version to release
        run: |
          npm version --git-tag-version=false ${{ github.event.inputs.version }}

      - name: Commit changes
        run: |
          git commit -a -m "ci: version bump to ${{ github.event.inputs.version }}"

      - name: Merge release to develop
        id: release_merge
        run: |
          git checkout develop
          git merge release/${{ github.event.inputs.version }}
          git checkout release/${{ github.event.inputs.version }}
          echo "MERGE_CONFLICTS=false" >> $GITHUB_ENV
        continue-on-error: true

      - name: Resolve package.json conflicts
        id: conflict_resolve
        run: |
          CONFLICT_LINE="`grep -n '<<<<<' package.json`"
          if [ "$CONFLICT_LINE" != "3:<<<<<<< HEAD" ]; then exit 1; fi
          grep -lr '<<<<<<<' package.json | xargs git checkout --theirs
          git add package.json
          git commit -m "merge release to develop"
          git checkout release/${{ github.event.inputs.version }}
          echo "MERGE_CONFLICTS=false" >> $GITHUB_ENV
        continue-on-error: true

      - name: Check merging failures
        if: steps.conflict_resolve.outcome != 'success' && steps.release_merge.outcome != 'success'
        run: exit 1

      - name: Release finish
        if: ${{always()}}
        run: echo ${{ env.MERGE_CONFLICTS }}


      - name: Release finish
        run: |
          git flow release finish ${{ github.event.inputs.version }} -m "chore: version bumped" ${{ github.event.inputs.version }}

      - name: Release publish
        run: |
          git push --all --follow-tags --no-verify